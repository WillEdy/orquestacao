apiVersion: v1
kind: Namespace
metadata:
  name: meu-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
          livenessProbe:
            exec:
              command:
                - "redis-cli"
                - "ping"
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - "redis-cli"
                - "ping"
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 1
            successThreshold: 0
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
  status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: meu-app
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:latest
          ports:
            - containerPort: 5672

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-svc
  namespace: meu-app
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: bitnami/minio:latest
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc
  status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: meu-app
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v-consumer
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: v-consumer
  template:
    metadata:
      labels:
        app: v-consumer
    spec:
      containers:
        - name: v-consumer
          image: willedy/v-consumer:1.1
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: config-volume
              mountPath: /config
      volumes:
        - name: config-volume
          configMap:
            name: v-consumer-config

---
apiVersion: v1
kind: Service
metadata:
  name: v-consumer-svc
  namespace: meu-app
spec:
  selector:
    app: v-consumer
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: t-producer
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: t-producer
  template:
    metadata:
      labels:
        app: t-producer
    spec:
      containers:
        - name: t-producer
          image: willedy/t-producer:1.0
          ports:
            - containerPort: 5050