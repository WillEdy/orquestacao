apiVersion: v1
kind: Namespace
metadata:
  name: meu-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
            - containerPort: 8001
    resources:
      limits:
      memory: 512Mi
      cpu: "1"
    requests:
      memory: 256Mi
      cpu: "0.5"
      env:
        - name:  REDIS_ARGS
          value:  --save 60 1000 --appendonly yes
        - name:  REDISTIMESERIES_ARGS
          value:  "RETENTION_POLICY=20"
      startupProbe:
        exec:
          command:
          - /bin/sh
          - -c 
          - redis-cli ping | grep -q PONG
        initialDelaySeconds: 10
        timeoutSeconds: 5
      volumeMounts:
          - mountPath: /data
            name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: projeto-orquestracao
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: meu-app
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - name: http
    port: 8001
    targetPort: 8001
  - name: console
    port: 6379
    targetPort: 6379
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:latest
          ports:
            - containerPort: 5672
            - containerPort: 15672
    env:
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c 
            - rabbitmq-diagnostics check_port_connectivity | grep -q Successfully
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.5"

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-svc
  namespace: meu-app
spec:
  selector:
    app: rabbitmq
  ports:
  - name: console
    port: 15672
    targetPort: 15672
  - name: api
    port: 5672
    targetPort: 5672
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - image: docker.io/bitnami/minio
        name: minio
        ports:
          - containerPort: 9000
          - containerPort: 9001
      env:
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c 
            - mc alias set myminio http://localhost:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"; 
            - mc ping --exit --quiet myminio > /dev/null
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.5"
        volumeMounts:
            - mountPath: /data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: meu-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: meu-app
spec:
  selector:
    app: minio
  ports:
  - name: http
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v-consumer
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: v-consumer
  template:
    metadata:
      labels:
        app: v-consumer
    spec:
      containers:
        - name: v-consumer
          image: willedy/v-consumer:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.5"

---
apiVersion: v1
kind: Service
metadata:
  name: v-consumer-svc
  namespace: meu-app
spec:
  selector:
    app: v-consumer
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: t-producer
  namespace: meu-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: t-producer
  template:
    metadata:
      labels:
        app: t-producer
    spec:
      containers:
        - name: t-producer
          image: willedy/t-producer:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 5050
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.5"